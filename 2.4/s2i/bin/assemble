#!/bin/bash

set -e

source ${HTTPD_CONTAINER_SCRIPTS_PATH}/common.sh

echo "---> Enabling s2i support in httpd24 image"

config_s2i

echo "---> Installing application source"
python << END
import re
import os
import urllib
import requests
from bs4 import BeautifulSoup
index=open('/tmp/src/index.html','r')
soup = BeautifulSoup(index, 'html.parser')
index.close()
wheels_check = []
sort_wheels = {}
headers = {'Authorization': 'token {}'.format(os.getenv('SESHETA_GITHUB_ACCESS_TOKEN'))}
releases = requests.get('https://api.github.com/repos/AICoE/tensorflow-wheels/releases',headers=headers)
if releases.status_code == 200:
    for release in releases.json():
        osver = release.get('name').split('/')[0]
        if not os.path.exists(os.path.join(os.getcwd(), release.get('name'))):
            try:
                os.makedirs(os.path.join(release['name'], 'simple/tensorflow/'))
            except Exception as e:
                continue
        for asset in release.get('assets', []):
            if asset.get('name') == 'build_info.yaml':
                continue
            elif os.path.join(release['name'], 'simple/tensorflow/', asset['name']) not in wheels_check:
                wheel_file_path=os.path.join(release['name'], 'simple/tensorflow/', asset['name'])
                urllib.urlretrieve(asset.get('browser_download_url'),wheel_file_path)
                py_vr=re.search(r'cp\d+', asset.get('name')).group(0)
                py_vr=re.search(r'\d+', py_vr).group(0)
                py_vr='.'.join(list(py_vr))
                wheels_check.append(wheel_file_path)
                sort_wheels[py_vr+'-'+release['name']]= [osver,py_vr,wheel_file_path]
for key in sorted(sort_wheels.keys(),reverse=True):
    tag="<h3 style=\"text-transform: capitalize;\">{} - Python {}</h3>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"{}\">{}</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n".format(sort_wheels[key][0],sort_wheels[key][1],sort_wheels[key][2],sort_wheels[key][2])
    tag_h = BeautifulSoup(tag, 'html.parser')
    soup.section.append(tag_h)
complete=open('/tmp/src/index.html','w')
complete.write(str(soup))
complete.close()
END
cp -Rf /tmp/src/. ./

process_extending_files ${HTTPD_APP_ROOT}/src/httpd-post-assemble/ ${HTTPD_CONTAINER_SCRIPTS_PATH}/post-assemble/

# Fix source directory permissions
fix-permissions ./
